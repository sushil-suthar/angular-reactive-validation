import { UntypedFormControl } from '@angular/forms';
export const getFormControlFromContainer = (name, controlContainer) => {
    if (controlContainer) {
        const control = controlContainer.control.controls[name];
        if (!control) {
            throw new Error(`There is no control named '${name}'` +
                (getPath(controlContainer).length > 0 ? ` within '${getPath(controlContainer).join('.')}'` : '') + '.');
        }
        if (!(control instanceof UntypedFormControl)) {
            throw new Error(`The control named '${name}' ` +
                (getPath(controlContainer).length > 0 ? `within '${getPath(controlContainer).join('.')}' ` : '') +
                `is not a FormControl. Maybe you accidentally referenced a FormGroup or FormArray?`);
        }
        return control;
    }
    else {
        throw new Error(`You can't pass a string to arv-validation-messages's for attribute, when the ` +
            `arv-validation-messages element is not a child of an element with a formGroupName or formGroup declaration.`);
    }
};
export const isControlContainerVoidOrInitialized = (controlContainer) => !!(!controlContainer || controlContainer.form ||
    (controlContainer.formDirective && controlContainer.formDirective.form));
const getPath = (controlContainer) => controlContainer.path || [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWZvcm0tY29udHJvbC1mcm9tLWNvbnRhaW5lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItcmVhY3RpdmUtdmFsaWRhdGlvbi9zcmMvbGliL2dldC1mb3JtLWNvbnRyb2wtZnJvbS1jb250YWluZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFvQixrQkFBa0IsRUFBd0MsTUFBTSxnQkFBZ0IsQ0FBQztBQUU1RyxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyxDQUFDLElBQVksRUFBRSxnQkFBOEMsRUFBc0IsRUFBRTtJQUM5SCxJQUFJLGdCQUFnQixFQUFFO1FBQ3BCLE1BQU0sT0FBTyxHQUFJLGdCQUFnQixDQUFDLE9BQTRCLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlFLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixNQUFNLElBQUksS0FBSyxDQUFDLDhCQUE4QixJQUFJLEdBQUc7Z0JBQ25ELENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7U0FDM0c7UUFDRCxJQUFJLENBQUMsQ0FBQyxPQUFPLFlBQVksa0JBQWtCLENBQUMsRUFBRTtZQUM1QyxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixJQUFJLElBQUk7Z0JBQzVDLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2dCQUNoRyxtRkFBbUYsQ0FBQyxDQUFDO1NBQ3hGO1FBRUQsT0FBTyxPQUFPLENBQUM7S0FDaEI7U0FBTTtRQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMsK0VBQStFO1lBQzdGLDZHQUE2RyxDQUFDLENBQUM7S0FDbEg7QUFDSCxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxtQ0FBbUMsR0FBRyxDQUFDLGdCQUE4QyxFQUFFLEVBQUUsQ0FDdEcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsSUFBSyxnQkFBdUMsQ0FBQyxJQUFJO0lBQ2pFLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxJQUFLLGdCQUFnQixDQUFDLGFBQW9DLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUVyRyxNQUFNLE9BQU8sR0FBRyxDQUFDLGdCQUFrQyxFQUFZLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVW50eXBlZEZvcm1Hcm91cCwgVW50eXBlZEZvcm1Db250cm9sLCBDb250cm9sQ29udGFpbmVyLCBGb3JtR3JvdXBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0Rm9ybUNvbnRyb2xGcm9tQ29udGFpbmVyID0gKG5hbWU6IHN0cmluZywgY29udHJvbENvbnRhaW5lcjogQ29udHJvbENvbnRhaW5lciB8IHVuZGVmaW5lZCk6IFVudHlwZWRGb3JtQ29udHJvbCA9PiB7XHJcbiAgaWYgKGNvbnRyb2xDb250YWluZXIpIHtcclxuICAgIGNvbnN0IGNvbnRyb2wgPSAoY29udHJvbENvbnRhaW5lci5jb250cm9sIGFzIFVudHlwZWRGb3JtR3JvdXApLmNvbnRyb2xzW25hbWVdO1xyXG4gICAgaWYgKCFjb250cm9sKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlcmUgaXMgbm8gY29udHJvbCBuYW1lZCAnJHtuYW1lfSdgICtcclxuICAgICAgICAoZ2V0UGF0aChjb250cm9sQ29udGFpbmVyKS5sZW5ndGggPiAwID8gYCB3aXRoaW4gJyR7Z2V0UGF0aChjb250cm9sQ29udGFpbmVyKS5qb2luKCcuJyl9J2AgOiAnJykgKyAnLicpO1xyXG4gICAgfVxyXG4gICAgaWYgKCEoY29udHJvbCBpbnN0YW5jZW9mIFVudHlwZWRGb3JtQ29udHJvbCkpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgY29udHJvbCBuYW1lZCAnJHtuYW1lfScgYCArXHJcbiAgICAgICAgKGdldFBhdGgoY29udHJvbENvbnRhaW5lcikubGVuZ3RoID4gMCA/IGB3aXRoaW4gJyR7Z2V0UGF0aChjb250cm9sQ29udGFpbmVyKS5qb2luKCcuJyl9JyBgIDogJycpICtcclxuICAgICAgICBgaXMgbm90IGEgRm9ybUNvbnRyb2wuIE1heWJlIHlvdSBhY2NpZGVudGFsbHkgcmVmZXJlbmNlZCBhIEZvcm1Hcm91cCBvciBGb3JtQXJyYXk/YCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGNvbnRyb2w7XHJcbiAgfSBlbHNlIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihgWW91IGNhbid0IHBhc3MgYSBzdHJpbmcgdG8gYXJ2LXZhbGlkYXRpb24tbWVzc2FnZXMncyBmb3IgYXR0cmlidXRlLCB3aGVuIHRoZSBgICtcclxuICAgICAgYGFydi12YWxpZGF0aW9uLW1lc3NhZ2VzIGVsZW1lbnQgaXMgbm90IGEgY2hpbGQgb2YgYW4gZWxlbWVudCB3aXRoIGEgZm9ybUdyb3VwTmFtZSBvciBmb3JtR3JvdXAgZGVjbGFyYXRpb24uYCk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGlzQ29udHJvbENvbnRhaW5lclZvaWRPckluaXRpYWxpemVkID0gKGNvbnRyb2xDb250YWluZXI6IENvbnRyb2xDb250YWluZXIgfCB1bmRlZmluZWQpID0+XHJcbiEhKCFjb250cm9sQ29udGFpbmVyIHx8IChjb250cm9sQ29udGFpbmVyIGFzIEZvcm1Hcm91cERpcmVjdGl2ZSkuZm9ybSB8fFxyXG4gICAgKGNvbnRyb2xDb250YWluZXIuZm9ybURpcmVjdGl2ZSAmJiAoY29udHJvbENvbnRhaW5lci5mb3JtRGlyZWN0aXZlIGFzIEZvcm1Hcm91cERpcmVjdGl2ZSkuZm9ybSkpO1xyXG5cclxuY29uc3QgZ2V0UGF0aCA9IChjb250cm9sQ29udGFpbmVyOiBDb250cm9sQ29udGFpbmVyKTogc3RyaW5nW10gPT4gY29udHJvbENvbnRhaW5lci5wYXRoIHx8IFtdO1xyXG4iXX0=